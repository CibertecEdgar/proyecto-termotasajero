@model IEnumerable<proyecto_termotasajero.Models.HorometrosMaquinariaPesada>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-3 py-md-4">
    <div class="row mb-3 mb-md-4">
        <div class="col-12">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-2">
                <h1 class="h2 text-black fw-bold mb-2 mb-md-0">Horometros Maquinaria Pesada</h1>
                <a asp-action="Registrar" class="btn btn-primary">
                     <i class="fas fa-plus-circle me-2"></i>Registrar
                </a>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-2 p-md-3">
            <div id="paginado-listado">
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0">
                        <thead class="table-light">
                            <tr id="header-row">
                                <!-- Los headers se llenan por JS -->
                            </tr>
                        </thead>
                        <tbody id="body-rows">
                            <!-- Las filas se llenan por JS -->
                        </tbody>
                    </table>
                </div>
                <div class="d-flex flex-column flex-sm-row justify-content-between align-items-center gap-2 mt-3 mt-md-4">
                    <button class="btn btn-outline-primary" id="prevSectionBtn" style="display:none;">
                        <i class="fas fa-chevron-left me-2"></i>Anterior sección
                    </button>
                    <button class="btn btn-primary" id="nextSectionBtn">
                        Siguiente sección<i class="fas fa-chevron-right ms-2"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Obtén los datos del modelo en JS
        const data = [
        @foreach (var item in Model)
        {
            @:{
            @:ID: @(item.ID),
            @:HoraInicio: '@item.HoraInicio',
            @:HoraFinalizacion: '@item.HoraFinalizacion',
            @:CorreoElectronico: '@item.CorreoElectronico',
            @:Nombre: '@item.Nombre',
            @:HorometroCoaldozer2: @(item.HorometroCoaldozer2),
            @:HorometroCoaldozer3: @(item.HorometroCoaldozer3),
            @:HorometroCoaldozer4: @(item.HorometroCoaldozer4),
            @:HorometroCargador1: @(item.HorometroCargador1),
            @:HorometroCargador2: @(item.HorometroCargador2),
            @:HorometroClasificadoraCarbon: @(item.HorometroClasificadoraCarbon),
            @:HorometroRetrocargadorKOMATSU: @(item.HorometroRetrocargadorKOMATSU),
            @:HorometroMiniCargadorBOBCAT: @(item.HorometroMiniCargadorBOBCAT),
            @:},
        }
            ];
        // Nombres de columnas en orden
        const columns = [
            'ID', 'HoraInicio', 'HoraFinalizacion', 'CorreoElectronico', 'Nombre', 'HorometroCoaldozer2', 'HorometroCoaldozer3', 'HorometroCoaldozer4', 'HorometroCargador1', 'HorometroCargador2', 'HorometroClasificadoraCarbon', 'HorometroRetrocargadorKOMATSU', 'HorometroMiniCargadorBOBCAT'
        ];
        // Nombres legibles para los headers (puedes personalizar estos nombres)
        const columnHeaders = [
            'ID', 'Hora de Inicio', 'Hora de Finalizacion', 'Correo Electronico', 'Nombre', 'Horometro Coaldozer #2', 'Horometro Coaldozer #3', 'Horometro Coaldozer #4', 'Horometro Cargador #1', 'Horometro Cargador #2', 'Horometro Clasificadora de Carbon', 'Horometro Retrocargador KOMATSU', 'Horometro Mini Cargador BOBCAT'
        ];
        // Paginación de columnas
        const pageSize = 6;
        let currentSection = 0;
        function renderTable() {
            // Renderiza los headers y las filas según la sección actual
            const start = currentSection * pageSize;
            const end = Math.min(start + pageSize, columns.length);
            const visibleColumns = columns.slice(start, end);
            const visibleHeaders = columnHeaders.slice(start, end);
            // Render headers
            const headerRow = document.getElementById('header-row');
            headerRow.innerHTML = '';
            visibleHeaders.forEach(h => {
                const th = document.createElement('th');
                th.textContent = h;
                headerRow.appendChild(th);
            });
            // Render rows
            const bodyRows = document.getElementById('body-rows');
            bodyRows.innerHTML = '';
            data.forEach(row => {
                const tr = document.createElement('tr');
                visibleColumns.forEach(col => {
                    const td = document.createElement('td');
                    td.textContent = row[col];
                    tr.appendChild(td);
                });
                bodyRows.appendChild(tr);
            });
            // Botones
            document.getElementById('prevSectionBtn').style.display = currentSection > 0 ? '' : 'none';
            document.getElementById('nextSectionBtn').style.display = end < columns.length ? '' : 'none';
        }
        document.getElementById('prevSectionBtn').onclick = function () {
            if (currentSection > 0) {
                currentSection--;
                renderTable();
            }
        };
        document.getElementById('nextSectionBtn').onclick = function () {
            if ((currentSection + 1) * pageSize < columns.length) {
                currentSection++;
                renderTable();
            }
        };
        renderTable();
    </script>
}